% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/emapplot_cluster.R
\name{emapplot_cluster}
\alias{emapplot_cluster}
\alias{emapplot_cluster,enrichResult-method}
\alias{emapplot_cluster,gseaResult-method}
\alias{emapplot_cluster,compareClusterResult-method}
\alias{emapplot_cluster.enrichResult}
\alias{emapplot_cluster.compareClusterResult}
\title{emapplot_cluster}
\usage{
emapplot_cluster(
  x,
  showCategory = nrow(x),
  color = "p.adjust",
  label_format = 30,
  ...
)

\S4method{emapplot_cluster}{enrichResult}(
  x,
  showCategory = 30,
  color = "p.adjust",
  label_format = 30,
  ...
)

\S4method{emapplot_cluster}{gseaResult}(
  x,
  showCategory = 30,
  color = "p.adjust",
  label_format = 30,
  ...
)

\S4method{emapplot_cluster}{compareClusterResult}(
  x,
  showCategory = nrow(x),
  color = "p.adjust",
  label_format = 30,
  ...
)

emapplot_cluster.enrichResult(
  x,
  showCategory = 30,
  color = "p.adjust",
  cex_line = 1,
  with_edge = TRUE,
  nWords = 4,
  nCluster = NULL,
  split = NULL,
  min_edge = 0.2,
  cex_label_group = 1,
  label_style = "shadowtext",
  group_legend = FALSE,
  cex_category = 1,
  label_format = 30,
  repel = FALSE,
  ...
)

emapplot_cluster.compareClusterResult(
  x,
  showCategory = 30,
  color = "p.adjust",
  cex_line = 1,
  with_edge = TRUE,
  nWords = 4,
  nCluster = NULL,
  split = NULL,
  min_edge = 0.2,
  cex_label_group = 1,
  pie = "equal",
  legend_n = 5,
  cex_category = 1,
  label_style = "shadowtext",
  group_legend = FALSE,
  label_format = 30,
  repel = FALSE,
  ...
)
}
\arguments{
\item{x}{enrichment result.}

\item{showCategory}{number of enriched terms to display}

\item{color}{variable that used to color enriched terms, e.g. pvalue,
p.adjust or qvalue}

\item{label_format}{a numeric value sets wrap length, alternatively a
custom function to format axis labels.}

\item{...}{Additional parameters used to set the position of the group label.
When the parameter repel is set to TRUE, additional parameters will take effect.

additional parameters can refer the following parameters.
    \itemize{
       \item \code{force} Force of repulsion between overlapping text labels. Defaults to 1. 
       \item \code{nudge_x, nudge_y} Horizontal and vertical adjustments to nudge 
        the starting position of each text label. 
       \item \code{direction} "both", "x", or "y" â€“ direction in which to adjust position of labels.
    }}

\item{cex_line}{scale of line width}

\item{with_edge}{if TRUE, draw the edges of the network diagram}

\item{nWords}{the number of words in the cluster tags}

\item{nCluster}{the number of clusters}

\item{split}{separate result by 'category' variable}

\item{min_edge}{minimum percentage of overlap genes to display the edge,
should between 0 and 1, default value is 0.2}

\item{cex_label_group}{scale of group labels size}

\item{label_style}{one of "shadowtext" and "ggforce"}

\item{group_legend}{If TRUE, the grouping legend will be displayed.
The default is FALSE}

\item{cex_category}{number indicating the amount by which plotting category
nodes should be scaled relative to the default.}

\item{repel}{whether to correct the position of the label. Defaults to FALSE.}

\item{pie}{proportion of clusters in the pie chart, one of
'equal' (default) or 'Count'}

\item{legend_n}{number of circle in legend}
}
\value{
ggplot object
}
\description{
Functional grouping network diagram for enrichment result of
over-representation test or gene set enrichment analysis
}
\details{
This function visualizes gene sets as a grouped network (i.e. enrichment map).
Gene sets with high similarity tend to cluster together, making it easier
for interpretation.
}
\examples{
\dontrun{
    library(clusterProfiler)
    library(org.Hs.eg.db)
    library(enrichplot)
    library(GOSemSim)
    library(DOSE)
    data(geneList)
    gene <- names(geneList)[abs(geneList) > 2]
    ego <- enrichGO(gene  = gene,
        universe      = names(geneList),
        OrgDb         = org.Hs.eg.db,
        ont           = "CC",
        pAdjustMethod = "BH",
        pvalueCutoff  = 0.01,
        qvalueCutoff  = 0.05,
        readable      = TRUE)
    d <- godata('org.Hs.eg.db', ont="BP")
    ego2 <- pairwise_termsim(ego, method = "Wang", semData = d)
    emapplot_cluster(ego2, showCategory = 80)
   }
}
